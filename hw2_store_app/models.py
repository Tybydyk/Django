# –°–æ–∑–¥–∞–∏ÃÜ—Ç–µ —Ç—Ä–∏ –º–æ–¥–µ–ª–∏ Django: –∫–ª–∏–µ–Ω—Ç, —Ç–æ–≤–∞—Ä –∏ –∑–∞–∫–∞–∑.
# –ö–ª–∏–µ–Ω—Ç –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–∫–∞–∑–æ–≤. –ó–∞–∫–∞–∑ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤.
# –¢–æ–≤–∞—Ä –º–æ–∂–µ—Ç –≤—Ö–æ–¥–∏—Ç—å –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–∫–∞–∑–æ–≤.
# üìå –ü–æ–ª—è –º–æ–¥–µ–ª–∏ "–ö–ª–∏–µ–Ω—Ç":
# ‚óã –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞
# ‚óã —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞
# ‚óã –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞
# ‚óã –∞–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–∞
# ‚óã –¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç
# –ü–æ–ª—è –º–æ–¥–µ–ª–∏ "–¢–æ–≤–∞—Ä":
# ‚óã –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
# ‚óã –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
# ‚óã —Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞
# ‚óã –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞
# ‚óã –¥–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
# –ü–æ–ª—è –º–æ–¥–µ–ª–∏ "–ó–∞–∫–∞–∑":
# ‚óã —Å–≤—è–∑—å —Å –º–æ–¥–µ–ª—å—é "–ö–ª–∏–µ–Ω—Ç", —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞,
# —Å–¥–µ–ª–∞–≤—à–µ–≥–æ –∑–∞–∫–∞–∑
# ‚óã —Å–≤—è–∑—å —Å –º–æ–¥–µ–ª—å—é "–¢–æ–≤–∞—Ä", —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ç–æ–≤–∞—Ä—ã, –≤—Ö–æ–¥—è—â–∏–µ –≤ –∑–∞–∫–∞–∑
# ‚óã –æ–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞
# ‚óã –¥–∞—Ç–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
# üìå *–î–æ–ø–∏—à–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏–∏ÃÜ CRUD –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–æ–¥–µ–ª—è–º–∏ –ø–æ –∂–µ–ª–∞–Ω–∏—é.
# –ß—Ç–æ –ø–æ –≤–∞—à–µ–º—É –º–Ω–µ–Ω–∏—é –∞–∫—Ç—É–∞–ª—å–Ω–æ –≤ —Ç–∞–∫–æ–∏ÃÜ –±–∞–∑–µ –¥–∞–Ω–Ω–Ω—ã—Ö

from django.db import models

class User(models.Model):
    name = models.CharField(max_length=100)
    email = models.EmailField(max_length=15)
    phone = models.CharField(max_length=50)
    address = models.CharField(max_length=200)
    reg_date = models.DateField(auto_now=True)
    birthday = models.DateField(default='2000-01-01')

    def __str__(self):
        return f'Username: {self.name}, email: {self.email}, phone: {self.phone}'


class Product(models.Model):
    product_name = models.CharField(max_length=100)
    description = models.TextField()
    price = models.DecimalField(max_digits=8, decimal_places=2)
    quantity = models.IntegerField(default=1)
    available = models.BooleanField(default=True)
    date_added = models.DateField(auto_now_add=True)

    def __str__(self):
        return f' Product: {self.product_name}, price: {self.price} '


STATUS_CHOICES = [
        ('INWORK', 'in_working'),
        ('FINISHED', 'finished'),
        ('CANCELED', 'canceled'),
]

class Order(models.Model):
    customer = models.ForeignKey(User, on_delete=models.CASCADE)
    products = models.ManyToManyField(Product)
    date_ordered = models.DateTimeField(auto_now_add=True)
    total_price = models.DecimalField(max_digits=8, decimal_places=2, default=0)
    status = models.CharField(choices=STATUS_CHOICES, max_length=10, default='INWORK')

    def __str__(self):
        return f'order_id:{self.id}, Customer:{self.customer.name}, total_price: {self.total_price} '
